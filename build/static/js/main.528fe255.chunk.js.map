{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Header/index.js","components/NavBar/index.js","components/Grid/index.js","App.js","index.js"],"names":["ImageCard","props","className","alt","name","src","image","onClick","changeClickStatus","id","Wrapper","children","Header","class","imageType","NavBar","href","score","topscore","Container","fluid","App","state","breeds","breedClicked","filter","dog","clicked","setState","alert","reset","shuffle","map","x","i","length","j","Math","floor","random","this","breed","Component","ReactDOM","render","document","getElementById"],"mappings":"gpDASeA,MANf,SAAmBC,GACjB,OACE,yBAAKC,UAAU,aAAaC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,kBAAkBP,EAAMQ,Q,aCEjGC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCS1BC,MAVf,SAAgBX,GACd,OACA,4BAAQY,MAAM,UACZ,4CACA,wGACA,2BAAIZ,EAAMa,a,MCOCC,MAZf,SAAgBd,GACd,OACE,yBAAKY,MAAM,UACX,4BACI,wBAAIA,MAAM,SAAQ,uBAAGG,KAAK,KAAR,gBAClB,wBAAIH,MAAM,IAAV,4BACA,sCAAYZ,EAAMgB,MAAlB,iBAAuChB,EAAMiB,aCJ9C,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOT,EAAY,EAAZA,SACjC,OAAO,yBAAKT,UAAS,mBAAckB,EAAQ,SAAW,KAAOT,G,ICsEhDU,E,2MAjEbC,MAAQ,CACNC,SACAN,MAAO,EACPC,SAAU,I,EAGZV,kBAAoB,SAAAC,GAClB,GAAI,EAAKa,MAAML,QAAU,EAAKK,MAAMJ,SAAU,CAC5C,IAAMM,EAAe,EAAKF,MAAMC,OAAOE,QAAO,SAAAC,GAAG,OAAIA,EAAIjB,KAAOA,KAAI,IAEvC,IAAzBe,EAAaG,SACfH,EAAaG,SAAU,EACvB,EAAKC,SAAS,CAAEX,MAAO,EAAKK,MAAML,MAAQ,MAG1CY,MAAM,qBACN,EAAKD,SAAS,CAAEX,MAAO,IACvB,EAAKa,SAGP,EAAKF,SAAS,CAAEL,WAChB,EAAKQ,QAAQ,EAAKT,MAAMC,aAGxBM,MAAM,oBACN,EAAKD,SAAS,CAAEX,MAAO,IACvB,EAAKW,SAAS,CAAEV,SAAU,IAC1B,EAAKY,S,EAITA,MAAQ,WACN,EAAKR,MAAMC,OAAOS,KAAI,SAAAC,GAAC,OAAIA,EAAEN,SAAU,KACvC,EAAKC,SAAS,CAAEL,Y,EAGlBQ,QAAU,SAACR,GACT,IAAK,IAAIW,EAAIX,EAAOY,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADA,EAEjB,CAACX,EAAOa,GAAIb,EAAOW,IAA3CX,EAAOW,GAFkC,KAE9BX,EAAOa,GAFuB,KAI5C,EAAKR,SAAS,CAAEL,Y,wEAIR,IAAD,OACP,OACE,kBAACJ,EAAD,KACE,kBAAC,EAAD,CAAQL,UAAU,sBAClB,kBAAC,EAAD,CAAQG,MAAOuB,KAAKlB,MAAML,MAAOC,SAAUsB,KAAKlB,MAAMJ,WACtD,kBAAC,EAAD,KACGsB,KAAKlB,MAAMC,OAAOS,KAAI,SAAAS,GAAK,OAC1B,kBAAC,EAAD,CACEjC,kBAAmB,EAAKA,kBACxBC,GAAIgC,EAAMhC,GACVL,KAAMqC,EAAMrC,KACZE,MAAOmC,EAAMnC,iB,GA3DToC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.528fe255.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ImageCard(props) {\r\n  return (\r\n    <img className=\"click-item\" alt={props.name} src={props.image} onClick={() => props.changeClickStatus(props.id)} />\r\n  );\r\n}\r\n\r\nexport default ImageCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n  <header class=\"header\">\r\n    <h1>Clicky Game!</h1>\r\n    <h2>Click on an image to earn points, but don't click on any more than once!</h2>\r\n    <p>{props.imageType}</p>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <nav class=\"navbar\">\r\n    <ul>\r\n        <li class=\"brand\"><a href=\"/\">Clicky Game</a></li>\r\n        <li class=\"\">Click an image to begin!</li>\r\n        <li>Score: {props.score} | Top Score: {props.topscore}</li>\r\n    </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport breeds from \"./dogBreeds.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport { Col, Row, Container } from \"./components/Grid\";\n\nclass App extends Component {\n\n  // Setting this.state.friends to the friends json array\n  state = {\n    breeds,\n    score: 0,\n    topscore: 15\n  };\n\n  changeClickStatus = id => {\n    if (this.state.score !== this.state.topscore) {\n      const breedClicked = this.state.breeds.filter(dog => dog.id === id)[0];\n\n      if (breedClicked.clicked !== true) {\n        breedClicked.clicked = true;\n        this.setState({ score: this.state.score + 1 });\n      }\n      else {\n        alert(\"You lost the game\");\n        this.setState({ score: 0 });\n        this.reset();\n      }\n      // Set this.state.friends equal to the new friends array\n      this.setState({ breeds });\n      this.shuffle(this.state.breeds);\n    }\n    else {\n      alert(\"You won the game\");\n      this.setState({ score: 0 });\n      this.setState({ topscore: 0 });\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.state.breeds.map(x => x.clicked = false);\n    this.setState({ breeds });   \n  };\n\n  shuffle = (breeds) => {\n    for (let i = breeds.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [breeds[i], breeds[j]] = [breeds[j], breeds[i]];\n    }\n    this.setState({ breeds });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Container>\n        <Header imageType=\"Choose Your Breed\" />\n        <NavBar score={this.state.score} topscore={this.state.topscore} />\n        <Wrapper>\n          {this.state.breeds.map(breed => (\n            <ImageCard\n              changeClickStatus={this.changeClickStatus}\n              id={breed.id}\n              name={breed.name}\n              image={breed.image}\n            />\n          ))}\n        </Wrapper>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}